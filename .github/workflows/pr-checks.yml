name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened, ready_for_review]

env:
  NODE_VERSION: '20'

jobs:
  # Skip checks for draft PRs unless explicitly requested
  check-pr-status:
    name: üìã Check PR Status
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
    steps:
      - name: Check if PR is ready
        id: check
        run: |
          if [[ "${{ github.event.pull_request.draft }}" == "true" ]]; then
            echo "should-run=false" >> $GITHUB_OUTPUT
            echo "Skipping checks for draft PR"
          else
            echo "should-run=true" >> $GITHUB_OUTPUT
            echo "Running checks for ready PR"
          fi

  # Quick feedback checks
  quick-checks:
    name: ‚ö° Quick Checks
    runs-on: ubuntu-latest
    needs: check-pr-status
    if: needs.check-pr-status.outputs.should-run == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check for merge conflicts
        run: |
          git merge-base --is-ancestor origin/main HEAD || {
            echo "‚ùå Branch is behind main. Please rebase or merge main into your branch."
            exit 1
          }
          
      - name: Check package.json changes
        run: |
          if git diff --name-only origin/main...HEAD | grep -q "package.json"; then
            echo "üì¶ package.json changed - validating..."
            npm ls --depth=0 || {
              echo "‚ùå Package dependencies are inconsistent"
              exit 1
            }
            echo "‚úÖ Package dependencies are valid"
          fi
          
      - name: Quick lint check
        run: npm run lint -- --max-warnings 0
        
      - name: TypeScript check
        run: npm run type-check

  # Comprehensive testing
  comprehensive-tests:
    name: üß™ Comprehensive Tests
    runs-on: ubuntu-latest
    needs: [check-pr-status, quick-checks]
    if: needs.check-pr-status.outputs.should-run == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run all tests
        run: npm test
        
      - name: Check test coverage
        run: |
          echo "Test coverage check would go here"
          # Add coverage threshold check when coverage is configured

  # Build verification
  build-verification:
    name: üèóÔ∏è Build Verification
    runs-on: ubuntu-latest
    needs: [check-pr-status, quick-checks]
    if: needs.check-pr-status.outputs.should-run == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Verify build output
        run: |
          if [ -d ".next" ]; then
            echo "‚úÖ Build successful"
            echo "üìä Build size: $(du -sh .next/)"
          else
            echo "‚ùå Build failed - no output directory"
            exit 1
          fi

  # Security and quality checks
  security-quality:
    name: üîí Security & Quality
    runs-on: ubuntu-latest
    needs: check-pr-status
    if: needs.check-pr-status.outputs.should-run == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Security audit
        run: npm audit --audit-level moderate
        continue-on-error: true
        
      - name: Check for secrets in code
        run: |
          echo "Checking for potential secrets..."
          if grep -r -i "password\|secret\|key\|token" src/ --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" | grep -v "// " | grep -v "placeholder" | grep -v "example"; then
            echo "‚ö†Ô∏è  Potential secrets found in code. Please review."
          else
            echo "‚úÖ No obvious secrets found in code"
          fi

  # Final status check
  pr-ready:
    name: ‚úÖ PR Ready
    runs-on: ubuntu-latest
    needs: [quick-checks, comprehensive-tests, build-verification, security-quality]
    if: always() && needs.check-pr-status.outputs.should-run == 'true'
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.quick-checks.result }}" == "success" && 
                "${{ needs.comprehensive-tests.result }}" == "success" && 
                "${{ needs.build-verification.result }}" == "success" && 
                "${{ needs.security-quality.result }}" == "success" ]]; then
            echo "üéâ All checks passed! PR is ready for review."
          else
            echo "‚ùå Some checks failed. Please fix the issues before merging."
            exit 1
          fi
